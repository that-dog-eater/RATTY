#!/bin/bash
set -e  # stop on error

mkdir -p /root/malware/logs

#keep all files in bin
output_file_name="" # Ex: shell_mod.exe
output_file_path=""
cs_original_file="" # Ex: shell.cs
csproj_file="" # Ex: shell.csproj
expected_mod_output_file="" # Ex: shell_mod.cs


mkdir -p ./bin

cp ./bin/"$cs_original_file" ./

python3 ./poly.py $cs_original_file

rm "$cs_original_file"


sleep 1

cp ./bin/"$csproj_file" ./

#dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true
dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=true -p:TrimMode=link -p:PublishReadyToRun=false

rm ./"$csproj_file"

mkdir -p "$output_file_path"

exe_built=$(find ./bin/Release/net9.0-windows/win-x64/publish/ -maxdepth 1 -type f -name "*.exe" | head -n 1)
mv "$exe_built" "$output_file_path/$output_file_name"

mv "$expected_mod_output_file" ./bin

echo "âœ… Build complete. Output is in: $output_file_path/$output_file_name"


